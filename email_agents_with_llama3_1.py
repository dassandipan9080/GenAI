# -*- coding: utf-8 -*-
"""Email_Agents_with_Llama3.1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Nm3BsQMAbGcHFyLzGkQdpOdoz656iFO9
"""

!pip install together

from together import Together

together_client = Together(api_key="48ac7f3c87d559d0bf871ef0c91c91a2b7c8724745dbff8eba6c6f0bf5b7c643")

#Giving the industry name for which you want to pitch
def get_user_input():
  user_input=input("Enter the industry you want to do digital marketing for---")
  return user_input

#Gives short pitches
def pitch_agent01(target):
    response = together_client.chat.completions.create(
        model="meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo",
        messages=[
            {
                "role": "system",
                "content": """You are an AI assistant that pitches customers about their digital marketing products for particular industries so that they can increase their sales
                showing their online presence.
                Create 4-5 short pitches of why your digital marketing products are the best in the industry.
                IMPORTANT: Respond with only the queries, one per line."""
            },
            {
                "role": "user",
                "content": f"Here's the industry for which you can suggest digital marketing products for: #### {target} ####"
            }
        ],
        max_tokens=150,
        temperature=0.7,
        top_p=1,
        top_k=50,
        repetition_penalty=1,
        stop=["<|eot_id|>"]
    )
    queries = response.choices[0].message.content.split('\n')
    return [query.strip() for query in queries if query.strip()]

pitch_agent01(get_user_input())

#Generate cold emails
def generate_cold_email(industry, customer_name):
    # Get pitches from agent01
    pitches = pitch_agent01(industry)

    # Use another AI call to generate the email
    response = together_client.chat.completions.create(
        model="meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo",
        messages=[
            {
                "role": "system",
                "content": """You are an AI assistant that creates personalized cold emails for digital marketing products.
                Use the provided pitches to craft a compelling email. The email should be professional, concise, and engaging."""
            },
            {
                "role": "user",
                "content": f"Create a cold email for {customer_name} in the {industry} industry. Use these pitches: {pitches}"
            }
        ],
        max_tokens=300,
        temperature=0.7,
        top_p=1,
        top_k=50,
        repetition_penalty=1,
        stop=["<|eot_id|>"]
    )

    return response.choices[0].message.content

customers = [
    {"name": "Raj Chauhan", "industry": get_user_input()},
    {"name": "Sandipan Das", "industry": get_user_input()},
   {"name": "Shahrukkh Khan", "industry": get_user_input()}
]

for customer in customers:
    email = generate_cold_email(customer["industry"], customer["name"])
    print(f"Email for {customer['name']}:")
    print(email)
    print("\n---\n")

