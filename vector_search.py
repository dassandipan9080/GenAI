# -*- coding: utf-8 -*-
"""Vector_Search.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R8hY3LIKdyrrJ9WvK_-_KpFpZNILPiZi
"""

import sqlite3

#Create a connection to SQLite DB
conn=sqlite3.connect('sample.db')

cursor=conn.cursor()

#Creating a table
cursor.execute(
    """
    CREATE TABLE IF NOT EXISTS STOCKS(
        stock_code INTEGER PRIMARY KEY,
        stock_name TEXT NOT NULL
    )
"""

)

cursor.execute(
    "INSERT INTO STOCKS (stock_name) VALUES(?)", ('TESLA',)
)

cursor.execute(
    "INSERT INTO STOCKS (stock_name) VALUES(?)", ('Microsoft',)
)

cursor.execute("SELECT * FROM STOCKS")

rows=cursor.fetchall()
rows

conn.commit()

conn.close()

"""Creating a vector storage for SQL Lite database

"""

import numpy as np

conn=sqlite3.connect('vector_db.db')

cursor=conn.cursor()

cursor.execute(
    """
    CREATE TABLE IF NOT EXISTS VECTORS(
        vector_id INTEGER PRIMARY KEY,
        vector_info BLOB NOT NULL
    )

    """
)

vect_tsla=np.array([1.3,3,5,2.2])
vect_msft=np.array([2.8,1.6,3.8,2.3])

vect_tsla.tobytes()

cursor.execute ("INSERT INTO vectors (vector_info) VALUES (?)",(sqlite3.Binary(vect_tsla.tobytes()),))

cursor.execute ("INSERT INTO vectors (vector_info) VALUES (?)",(sqlite3.Binary(vect_msft.tobytes()),))

cursor.execute("SELECT * FROM VECTORS")

rows=cursor.fetchall()
rows

#Deserialization

rows[0][1]

v=np.frombuffer(rows[0][1],np.float64)

v

v=np.frombuffer(rows[1][1],np.float64)

v

vectors=[]

for i in rows:
  vectors.append(np.frombuffer(i[1],np.float64))

print(vectors)

query_vector=np.array([8.6,2.2,6.5,5.5])

cursor.execute("""
 SELECT vector_info FROM vectors ORDER BY abs(vector_info-?) ASC
""",(sqlite3.Binary(query_vector.tobytes()),)
)

result=cursor.fetchone()
result

#Deseralization
np.frombuffer(result[0],np.float64)

